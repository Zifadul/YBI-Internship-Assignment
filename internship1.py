# -*- coding: utf-8 -*-
"""internship1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xZsiw6-6ECV5uE3sry5SVGnDfSK7wKGE

Movies Recommendation
YBI Foundation dataset
"""

#import Libraries
import pandas as pd
import numpy as np

# import Data
movies = pd.read_csv('https://github.com/YBI-Foundation/Dataset/raw/main/Movies%20Recommendation.csv')

movies.head()

movies.info()

movies.describe()

movies.shape

movies.columns

x = movies[['Movie_Genre','Movie_Keywords','Movie_Tagline', 'Movie_Cast','Movie_Director']].fillna('')

x.shape

x

X = x['Movie_Genre'] + '' + x['Movie_Keywords'] + '' + x['Movie_Tagline'] + '' + x['Movie_Cast'] + '' + x['Movie_Director']

X

X.shape

from sklearn.feature_extraction.text import TfidfVectorizer

model = TfidfVectorizer()

X = model.fit_transform(X)

X.shape

print(X)

from sklearn.metrics.pairwise import cosine_similarity

similarity_score = cosine_similarity(X)

similarity_score

similarity_score.shape

"""**Get the movies name as a input from the user**"""

Favourite_Movie_Name = input("Enter your favourite movie name :")

All_Movies_Title_List = movies['Movie_Title'].tolist()

import difflib

Movie_Recommendation = difflib.get_close_matches(Favourite_Movie_Name,All_Movies_Title_List)
print(Movie_Recommendation)

close_Match = Movie_Recommendation[0]
print(close_Match)

Index_of_close_Match_Movie = movies[movies.Movie_Title == close_Match]['Movie_ID'].values[0]
print(Index_of_close_Match_Movie)

# Getting list of similar Movie
Recommendation_Score = list(enumerate(similarity_score[Index_of_close_Match_Movie]))
print(Recommendation_Score)

len(Recommendation_Score)

"""**Get all movies sort based on recoomendation score wrt favourite movies**"""

#sort the movie with their similarity score
sorted_similar_movies = sorted(Recommendation_Score,key = lambda X:X[1], reverse = True)
print(sorted_similar_movies)

#print the name of similar movies based on the index
print("Top 30 Movies Suggested For You : \n")

i = 1

for movie in sorted_similar_movies:
  index = movie[0]
  title_from_index = movies[movies.index == index]['Movie_Title'].values[0]
  if (i<30):
    print(i, '.', title_from_index)
    i+=1

"""**Top 10 Movie Recommendation system**"""

Movie_Name = input("Enter your favourite movie name")
list_of_all_titles = movies['Movie_Title'].tolist()

Find_close_Match = difflib.get_close_matches(Movie_Name, list_of_all_titles)

close_Match = Find_close_Match[0]

Index_of_Movie = movies[movies.Movie_Title == close_Match]['Movie_ID'].values[0]

Recommendation_Score = list(enumerate(similarity_score[Index_of_Movie]))

sorted_similar_movies = sorted(Recommendation_Score, key = lambda X:X[1], reverse = True)

print("Top 10 Movies suggested for you : \n")

i = 1

for movie in sorted_similar_movies:
  index = movie[0]
  title_from_index = movies[movies.Movie_ID == index]['Movie_Title'].values
  if (i<11):
    print(i, '.', title_from_index)
    i+=1